{
  "components": {
    "schemas": {
      "instance": {
        "properties": {
          "apiUrl": {
            "description": "The API endpoint for connecting to the secrets engine.",
            "type": "string"
          },
          "creationFinishedDate": {
            "description": "The date and time the creation of the Secrets Manager instance was finished.",
            "type": "string"
          },
          "creationStartDate": {
            "description": "The date and time the creation of the Secrets Manager instance was triggered.",
            "type": "string"
          },
          "id": {
            "description": "A auto generated unique id which identifies the secrets manager instances.",
            "type": "string"
          },
          "name": {
            "description": "A user chosen name to distinguish multiple secrets manager instances.",
            "type": "string"
          },
          "secretCount": {
            "description": "The number of secrets currently stored inside of the instance. This value will be updated once per hour.",
            "type": "integer"
          },
          "secretsEngine": {
            "description": "The name of the secrets engine.",
            "type": "string"
          },
          "state": {
            "description": "The current state of the Secrets Manager instance.",
            "type": "string"
          },
          "updateFinishedDate": {
            "type": "string"
          },
          "updateStartDate": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "secretsEngine",
          "apiUrl",
          "state",
          "creationStartDate",
          "secretCount"
        ]
      },
      "instanceCreate": {
        "properties": {
          "name": {
            "description": "A user chosen name to distinguish multiple secrets manager instances.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "instanceList": {
        "properties": {
          "instances": {
            "items": {
              "$ref": "#/components/schemas/instance"
            },
            "type": "array"
          }
        },
        "required": [
          "instances"
        ]
      },
      "user": {
        "properties": {
          "description": {
            "description": "A user chosen description to differentiate between multiple users.",
            "type": "string"
          },
          "id": {
            "description": "A auto generated unique id which identifies the users.",
            "type": "string"
          },
          "password": {
            "description": "A auto generated password for logging in with the user.",
            "type": "string"
          },
          "username": {
            "description": "A auto generated username for logging in with the user.",
            "type": "string"
          },
          "write": {
            "description": "Is true if the user has write access to the secrets engine. Is false for a read-only user.",
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "username",
          "password",
          "write",
          "description"
        ]
      },
      "userCreate": {
        "properties": {
          "description": {
            "description": "A user chosen description to differentiate between multiple users.",
            "type": "string"
          },
          "write": {
            "description": "Is true if the user has write access to the secrets engine. Is false for a read-only user.",
            "type": "boolean"
          }
        },
        "required": [
          "write",
          "description"
        ]
      },
      "userList": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/user"
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "userUpdate": {
        "properties": {
          "write": {
            "description": "Is true if the user has write access to the secrets engine. Is false for a read-only user.",
            "type": "boolean"
          }
        }
      }
    }
  },
  "info": {
    "description": "This API provides endpoints for managing the Secrets-Manager.\n",
    "title": "Secrets-Manager API",
    "version": "1.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1/projects/{projectId}/instances": {
      "get": {
        "description": "Returns a list of all Secrets Manager instances within the project.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instanceList"
                }
              }
            },
            "description": "Successful response with all instances."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      },
      "parameters": [
        {
          "description": "The STACKIT portal project UUID the Secrets Manager instance is part of.",
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        }
      ],
      "post": {
        "description": "Creates a new Secrets Manager instance within the project.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instanceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance"
                }
              }
            },
            "description": "Instance was created successfully"
          },
          "400": {
            "description": "Bad Request. Invalid instance name."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}": {
      "delete": {
        "description": "Deletes the given Secrets Manager instance.",
        "responses": {
          "204": {
            "description": "Instance was deleted successfully."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "404": {
            "description": "Not found. Instance not found."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      },
      "get": {
        "description": "Returns the details for the given Secrets Manager instance.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance"
                }
              }
            },
            "description": "Instance details successfully retrieved."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "404": {
            "description": "Not found. Instance not found."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      },
      "parameters": [
        {
          "description": "The STACKIT portal project UUID the Secrets Manager instance is part of.",
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        },
        {
          "description": "The Secrets Manager instance UUID.",
          "in": "path",
          "name": "instanceId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        }
      ]
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users": {
      "get": {
        "description": "Returns the users for the given Secrets Manager instance.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userList"
                }
              }
            },
            "description": "All users for the Secrets Manager instance have been returned."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "404": {
            "description": "Not found. Instance not found."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      },
      "parameters": [
        {
          "description": "The STACKIT portal project UUID the Secrets Manager instance is part of.",
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        },
        {
          "description": "The Secrets Manager instance UUID.",
          "in": "path",
          "name": "instanceId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        }
      ],
      "post": {
        "description": "Creates a new user for the given Secrets Manager instance.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "description": "The user has been created for the Secrets Manager instance."
          },
          "400": {
            "description": "Bad request. User description too long."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "404": {
            "description": "Not found. Instance not found."
          },
          "409": {
            "description": "Conflict. User limit reached. Contact the support."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}": {
      "delete": {
        "description": "Deletes the given user.",
        "responses": {
          "204": {
            "description": "Instance was deleted successfully"
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "404": {
            "description": "Not found. Instance or user not found."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      },
      "get": {
        "description": "Returns the details for the given user.",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            },
            "description": "The details for the user have been successfully returned."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "404": {
            "description": "Not found. Instance or user not found."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      },
      "parameters": [
        {
          "description": "The STACKIT portal project UUID the Secrets Manager instance is part of.",
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        },
        {
          "description": "The Secrets Manager instance UUID.",
          "in": "path",
          "name": "instanceId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        },
        {
          "description": "The user UUID with permissions on the Secrets Manager instance.",
          "in": "path",
          "name": "userId",
          "required": true,
          "schema": {
            "format": "uuid",
            "type": "string",
            "x-go-type": "string"
          }
        }
      ],
      "put": {
        "description": "Updates the details for the given user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The details for the user have been successfully updated."
          },
          "401": {
            "description": "Unauthorized. You may have provided no or wrong credentials."
          },
          "404": {
            "description": "Not found. Instance or user not found."
          },
          "500": {
            "description": "Internal server error. The application experienced some unexpected situation."
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "This API provides endpoints for managing the Secrets-Manager.\n",
      "url": "https://secrets-manager.api.eu01.stackit.cloud"
    }
  ]
}